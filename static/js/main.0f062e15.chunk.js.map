{"version":3,"sources":["components/SearchForm.js","components/Forecast.js","components/Results.js","components/Nav.js","components/Footer.js","config.js","App.js","serviceWorker.js","index.js"],"names":["SearchFormWithRouter","withRouter","props","useState","search","setSearch","Form","onSubmit","e","preventDefault","searchUrl","history","push","handleSearch","inline","FormGroup","id","FormControl","type","name","placeholder","value","onChange","target","Button","Forecast","description","descCapitalized","currentTemp","wind","direction","feels","low","high","data","console","log","weather","charAt","toUpperCase","slice","rawTemp","main","temp","Math","round","trunc","roundTemp","feels_like","feelsLike","temp_min","lowTemp","temp_max","highTemp","rawWind","speed","deg","windy","className","Results","waitForIt","setTimeout","setBackgroundImg","backgroundRef","current","style","background","backgroundSize","state","loading","React","createRef","this","Container","ref","Component","Nav","Cookies","getJSON","nav1","setNav1","url1","setUrl1","nav2","setNav2","url2","setUrl2","nav3","setNav3","url3","setUrl3","input","setInput","showing","setShowing","firstOption","setFirstOption","secondOption","setSecondOption","thirdOption","setThirdOption","setLink","link","fetchNav","abbreviate","word","length","short","substring","exact","to","onClick","document","getElementById","selected","event","set","expires","url","changeLink","display","textInput","focus","Footer","handleClick","textDecoration","apiKey","App","setBackground","conditions","imageObject","clearSky","lightRain","moderateRain","heavyRain","lightSnow","moderateSnow","heavySnow","scatteredCloud","overcastCloud","setState","includes","HeavyRain","handleWeatherFetch","query","location","axios","get","then","res","results","catch","error","jumboSmall","jumbo","Jumbotron","handleJumboStyle","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f062e15.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  FormGroup,\n  FormControl,\n  Button\n} from 'react-bootstrap';\n\nimport { withRouter } from \"react-router\";\n\nconst SearchForm = (props) => {\n\n  const [search, setSearch] = useState(\"\")\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let searchUrl = `/search/${search}`;\n    props.history.push(searchUrl);\n\t\tprops.handleSearch(search);\n\t\tsetSearch(\"\");\n  }\n\n  const handleChange = e => {\n\t\tsetSearch(e.target.value);\n\t}\n\n  return (\n    <Form onSubmit={handleSubmit} inline>\n      <FormGroup id=\"searchBarContainer\">\n        <FormControl\n        id=\"searchBar\" \n        type=\"search\" \n        name=\"search\" \n        placeholder=\"What's the weather like in...\" \n        value={search}\n        onChange={handleChange}\n        />\n      </FormGroup>\n      {' '}\n      <Button id=\"searchButton\" type=\"submit\">\n        Search\n      </Button>\n    </Form>\n  )\n};\n\nconst SearchFormWithRouter = withRouter(SearchForm);\nexport default SearchFormWithRouter;","import React from 'react';\n\nconst Forecast = (props) => {\n  let data = props.data\n  console.log(data);\n\n  let description;\n  let descCapitalized;\n  let currentTemp;\n  let wind;\n  let direction;\n  let feels;\n  let low;\n  let high;\n  \n  const roundTemp = () => {\n    let rawTemp = data.main.temp;\n    rawTemp = Math.round(rawTemp);\n    currentTemp = Math.trunc(rawTemp)\n  }\n\n  const windy = () => {\n    let rawWind = data.wind.speed;\n    rawWind = Math.round(rawWind);\n    wind = Math.trunc(rawWind)\n\n    direction = data.wind.deg;\n    if (direction >= 334 || direction <= 25) {\n      direction = \"N\";\n    }\n    if (direction >= 26 || direction <= 65) {\n      direction = \"NE\";\n    }\n    if (direction >= 66 || direction <= 115) {\n      direction = \"E\";\n    }\n    if (direction >= 116 || direction <=  155) {\n      direction = \"SE\";\n    }\n    if (direction >= 156 || direction <=  205) {\n      direction = \"S\";\n    }\n    if (direction >= 206 || direction <=  245) {\n      direction = \"SW\";\n    }\n    if (direction >= 246 || direction <=  295) {\n      direction = \"W\";\n    }\n    if (direction >= 296 || direction <=  335) {\n      direction = \"NW\";\n    }\n  }\n\n  const feelsLike = () => {\n    let rawTemp = data.main.feels_like;\n    rawTemp = Math.round(rawTemp);\n    feels = Math.trunc(rawTemp)\n  }\n\n  const lowTemp = () => {\n    let rawTemp = data.main.temp_min;\n    rawTemp = Math.round(rawTemp);\n    low = Math.trunc(rawTemp)\n  }\n\n  const highTemp = () => {\n    let rawTemp = data.main.temp_max;\n    rawTemp = Math.round(rawTemp);\n    high = Math.trunc(rawTemp)\n  }\n\n  if (data.weather && data.weather[0]) {\n    description = data.weather[0].description;\n    descCapitalized = description.charAt(0).toUpperCase() + description.slice(1);\n    roundTemp();\n    feelsLike();\n    lowTemp();\n    highTemp();\n    windy();\n  }\n\n  return (\n    <div id=\"forecast-container\">\n      <div id=\"conditions\">\n        <h6 id=\"conditions-header\">{`Current Conditions in ${data.name}:`}</h6>\n        <h6 id=\"conditions-desc\">{descCapitalized}</h6>\n      </div>\n      <div id=\"forecast-div\">\n        <div id=\"forecast-flex\">\n          <div>{`Currently: ${currentTemp}°`}</div>\n          <div>{`Feels Like: ${feels}°`}</div>\n          <div>{`Low Today: ${low}°`}</div>\n          <div>{`High Today: ${high}°`}</div>\n          <div>{`Wind: ${direction}${wind}mph`}</div>\n          <div className=\"tide\">\n            <p>{`High Tide: N/A`}</p>\n            <p >{`Low Tide: N/A`}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Forecast;","import React, { Component } from 'react';\nimport {\n  Container,\n} from 'react-bootstrap';\nimport Forecast from './Forecast';\n\n\n\n\nclass Results extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: true,\n    } \n    this.backgroundRef = React.createRef();\n  }\n\n  waitForIt = () => {\n    setTimeout(() => {\n      this.setBackgroundImg();\n    }, 1000)\n  }\n  \n  setBackgroundImg = () => {\n    this.backgroundRef.current.style.background = this.props.background;\n    this.backgroundRef.current.style.backgroundSize = \"cover\";\n  }\n\n render() {\n   this.waitForIt();\n  return (\n    <Container ref={this.backgroundRef}  id=\"resultsContainer\">\n      <Forecast data={this.props.data} />\n    </Container>\n    )\n }\n};\n\nexport default Results;\n\n// style={{background:this.state.background}}","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst Nav = (props) => {\n\n  // let textInput = React.createRef();\n\n  const [nav1, setNav1] = useState(Cookies.getJSON('nav1') || \"Virginia\");\n  const [url1, setUrl1] = useState(Cookies.getJSON('url1') || \"Virginia\");\n\n  const [nav2, setNav2] = useState(Cookies.getJSON('nav2') || \"Maine\");\n  const [url2, setUrl2] = useState(Cookies.getJSON('url2') || \"Maine\");\n\n  const [nav3, setNav3] = useState(Cookies.getJSON('nav3') || \"Florida\");\n  const [url3, setUrl3] = useState(Cookies.getJSON('url3') || \"Florida\");\n\n  const[input, setInput] = useState(\"\");\n  const[showing, setShowing] = useState(false)\n\n  //options\n  const[firstOption, setFirstOption] = useState(false);\n  const[secondOption, setSecondOption] = useState(false);\n  const[thirdOption, setThirdOption] = useState(false);\n\n  const setLink = e => {\n    let link = e.target.name;\n    props.fetchNav(link)\n  }\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const changeLink = () => {\n    if (firstOption) {\n      setNav1(input);\n      Cookies.set('nav1', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url1', url, {expires: 30});\n      setUrl1(url);\n    }\n    if (secondOption) {\n      setNav2(input);\n      Cookies.set('nav2', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url2', url, {expires: 30});\n      setUrl2(url);\n    }\n    if (thirdOption) {\n      setNav3(input);\n      Cookies.set('nav3', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url3', url, {expires: 30});\n      setUrl3(url);\n    }\n  }\n\n  const abbreviate = (word) => {\n    if (word.length > 10) {\n      let short = word.substring(0, 8);\n      let format = `${short}..`\n      return format;\n    } else {\n      return word;\n    }\n  }\n\n  //Show input based on option selected\n  const showHideInput = () => {\n    let firstOption = document.getElementById(\"first\").selected;\n    let secondOption = document.getElementById(\"second\").selected;\n    let thirdOption = document.getElementById(\"third\").selected;\n\n    //Check which option is true\n    if (firstOption) {\n      setFirstOption(true);\n    } else {\n      setFirstOption(false);\n    }\n    if (secondOption) {\n      setSecondOption(true);\n    } else {\n      setSecondOption(false);\n    }\n    if (thirdOption) {\n      setThirdOption(true);\n    } else {\n      setThirdOption(false);\n    }\n\n    //Expand Jumbotron if an option is selected\n    if (firstOption || secondOption || thirdOption) {\n      console.log(\"an option is selected\")\n      if (!showing) {\n        setShowing(true);\n        // props.jumbo();\n      }\n    } else {\n      setShowing(false);\n      // props.jumbo();\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // props.jumbo();\n    changeLink();\n    setShowing(false);\n    setInput(\"\");\n    document.getElementById(\"homeOption\").selected = true;\n  }\n\n  // Need to open an input that lets users select the location and then use the newLink function to set the Nav and the Url\n \n  return (\n  <div id=\"nav-container\">\n    <div id=\"mainNav\">\n      <ul>\n        <li><NavLink exact to=\"link1\" name={nav1} onClick={setLink}>{url1}</NavLink></li>\n        <li><NavLink to=\"link2\" name={nav2} onClick={setLink}>{url2}</NavLink></li>\n        <li><NavLink to=\"link3\" name={nav3} onClick={setLink}>{url3}</NavLink></li>\n      </ul>\n    </div>\n    <div id=\"form-div\">\n      <form id=\"form-options\"> \n        <select id=\"favorite-options\" onChange={showHideInput}>\n          <option id=\"homeOption\">♥Change Links</option>\n          <option id=\"first\">Change 1st</option>\n          <option id=\"second\">Change 2nd</option>\n          <option id=\"third\">Change 3rd</option>\n        </select>\n      </form>\n      <form onSubmit={handleSubmit}  style={{display: showing ? 'block' : \"none\"}}>\n          { (firstOption || secondOption || thirdOption)\n          ? <input id=\"new-link\" type=\"text\" placeholder=\"New Location is...\" ref={textInput => textInput && textInput.focus()} className=\"edit-nav\" value={input} onChange={handleChange}/>\n          : null \n          } \n      </form>\n    </div>\n  </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Footer = (props) => {\n\n  const handleClick = (event) => {\n    event.preventDefault();\n  }\n\n  return (\n      <div id=\"footer\">\n        <NavLink to=\"/\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handleClick}>\n        <i className=\"material-icons footer-icon\" >dashboard</i>\n        <span className=\"footer-text\">Home</span>\n        </NavLink>\n        <NavLink to=\"/hourly\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handleClick} >\n        <i className=\"material-icons footer-icon\" >access_time</i>\n        <span className=\"footer-text\">Hourly</span>\n        </NavLink>\n        <NavLink to=\"/3-day\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handleClick}>\n        <i className=\"material-icons footer-icon\">calendar_today</i>\n        <span className=\"footer-text\">3 Day</span>\n        </NavLink>\n        <NavLink to=\"/5-day\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handleClick}>\n        <i className=\"material-icons footer-icon\">calendar_today</i>\n        <span className=\"footer-text\">5 Day</span>\n        </NavLink>\n      </div>\n  )\n}\n\nexport default Footer;","const apiKey = 'd77262e5a1d388bebb698bab17c0b153';\nexport default apiKey;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n//Bootstraps\nimport { Container, Jumbotron } from 'react-bootstrap';\n\n//Components\nimport SearchForm from './components/SearchForm';\nimport Results from './components/Results';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\n\n//Fetch\nimport axios from 'axios';\nimport apiKey from './config';\n\n//Images\n\n// import oldTree from './images/oldTree.jpeg';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      location: \"\",\n      results: [],\n      conditions: \"\",\n      background: \"\",\n      jumboSmall: true,\n      loading: true\n    }\n    this.jumbo = React.createRef();\n  }\n\n  componentDidMount(){\n    this.handleWeatherFetch();\n  }\n\n  \n setBackground = (conditions = \"clear sky\") => {\n    const imageObject = {\n      clearSky: \"url(https://live.staticflickr.com/4671/40268815811_1244a6b370_z.jpg)\",\n      lightRain: \"url(https://live.staticflickr.com/3906/14674848444_e04aeab462.jpg)\",\n      moderateRain: \"url(https://live.staticflickr.com/4576/24410968298_7e29e77769.jpg)\",\n      heavyRain: \"url(https://live.staticflickr.com/4017/4394669806_ab806947fb_z.jpg)\",\n      lightSnow:\"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\" ,\n      moderateSnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      heavySnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      scatteredCloud:\"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\" ,\n      overcastCloud: \"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\",\n    }\n    this.setState({\n      background: imageObject.clearSky\n    })\n    if (conditions.includes(\"clear\")) {\n      this.setState({\n        background: imageObject.clearSky\n      })\n      return;\n    }\n    if (conditions.includes(\"rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (conditions.includes(\"light rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (conditions.includes(\"moderate rain\")) {\n      this.setState({\n        background: imageObject.moderateRain\n      })\n      return;\n    }\n    if (conditions.includes(\"heavy rain\")) {\n      this.setState({\n        background: imageObject.HeavyRain\n      })\n      return;\n    }\n    if (conditions.includes(\"snow\")) {\n      this.setState({\n        background: imageObject.lightSnow\n      })\n      return;\n    }\n    if (conditions.includes(\"clouds\")) {\n      this.setState({\n        background: imageObject.scatteredCloud\n      })\n      return;\n    } \n  }\n\n  // Weather API call\n  handleWeatherFetch = (query = \"charlottesville\") => {\n    this.setState({\n      loading: true,\n      location: query,\n    })\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=imperial&APPID=${apiKey}`)\n      .then(res => {\n        let conditions = res.data.weather[0].description\n        this.setState({\n          results: res.data,\n          conditions: conditions,\n          loading: false\n        })\n        this.setBackground(this.state.conditions);\n        // setTimeout(() => {\n        //   console.log(this.state.query);\n        //   this.handleFlickr(this.state.query);\n        // }, 1000)\n        \n      })\n      .catch(error => {\n        console.log('Error fetching the weather data:', error)\n      })\n  }\n\n  // handleJumboStyle = () => {\n  //   if (this.state.jumboSmall) {\n  //     this.jumbo.current.style.height = \"47%\";\n  //     // let container = document.getElementById(\"resultsContainer\");\n  //     // container.style.height = \"45%\";\n  //     this.setState({\n  //       jumboSmall: false\n  //     })\n  //   } else {\n  //     this.jumbo.current.style.height = \"40%\";\n  //     this.setState({\n  //       jumboSmall: true\n  //     })\n  //   }\n  // }\n\n  render() {\n    return (\n      <HashRouter >\n      <div className=\"App\">\n        <Jumbotron ref={this.jumbo}>\n          <Container>\n            <h5 id=\"appTitle\">Weather The Elements</h5>\n            <SearchForm \n              handleSearch={this.handleWeatherFetch}\n            />\n            <Nav jumbo={this.handleJumboStyle} fetchNav={this.handleWeatherFetch}/>\n            \n          </Container>\n        </Jumbotron>\n        {/* <Results data={this.state.results} background={this.state.background}/> */}\n        <Switch>\n          <Route exact path =\"/\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/link1\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n\n          <Route exact path =\"/link2\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/link3\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/search/:query\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n        </Switch>\n        <Footer />\n      </div>\n      </HashRouter>\n      \n    );\n  }\n}\n\nexport default App;\n\n\n \n\n//***** Working Flickr Fetch: \n\n/* Does not retrieve optimal images based on weather description. Increases Load times.  May use later for something. Checks for image, reduces image size link; */\n\n\n// reFormat = (format) => {\n//   let editFormat = format.substring(0, format.lastIndexOf(\"_\"));\n//   format = `${editFormat}_z.jpg`;\n//   console.log(format);\n//   this.setState({\n//     background: format,\n//     loading: false\n//   }) \n// }\n// //Fetch background Image\n// handleFlickr = (query) => {\n//   console.log(query);\n//   let num = Math.floor(Math.random() * 20);\n//   this.setState({\n//     loading: true\n//   })\n//   axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKeyFlickr}&tags=${query}&per_page=24&extras=url_o&format=json&nojsoncallback=1`)\n//   .then(res => {\n//     console.log(res.data.photos)\n//     let format = `url(${res.data.photos.photo[num].url_o})`;  \n//     for(let i = 0; i < 20; i++) {\n//       if (format === \"url(undefined)\") {\n//         console.log(\"+1\");\n//         format = `url(${res.data.photos.photo[i].url_o})`\n//         i++\n//       } else {\n//         this.reFormat(format);\n//       } \n//     }\n//   })\n//   .catch(error => {\n//     console.log('Error fetching and parsing data', error)\n//   },)\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}