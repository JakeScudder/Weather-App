{"version":3,"sources":["components/SearchForm.js","components/Forecast.js","components/Footer.js","components/Results.js","components/Nav.js","config.js","App.js","serviceWorker.js","index.js"],"names":["SearchFormWithRouter","withRouter","props","useState","search","setSearch","Form","onSubmit","e","preventDefault","searchUrl","history","push","handleSearch","inline","FormGroup","id","FormControl","type","name","placeholder","value","onChange","target","Button","Forecast","description","descCapitalized","currentTemp","feels","low","high","data","weather","charAt","toUpperCase","slice","rawTemp","main","temp","Math","round","trunc","roundTemp","feels_like","feelsLike","temp_min","lowTemp","temp_max","highTemp","Footer","Results","waitForIt","setTimeout","setBackgroundImg","backgroundRef","current","style","background","backgroundSize","height","state","loading","React","createRef","this","Container","ref","Component","Nav","Cookies","getJSON","nav1","setNav1","url1","setUrl1","nav2","setNav2","url2","setUrl2","nav3","setNav3","url3","setUrl3","input","setInput","showing","setShowing","firstOption","setFirstOption","secondOption","setSecondOption","thirdOption","setThirdOption","setLink","link","fetchNav","abbreviate","word","length","short","substring","exact","to","onClick","document","getElementById","selected","console","log","jumbo","event","set","expires","url","changeLink","display","textInput","focus","className","apiKey","App","setBackground","query","imageObject","clearSky","lightRain","moderateRain","heavyRain","lightSnow","moderateSnow","heavySnow","scatteredCloud","overcastCloud","setState","includes","HeavyRain","handleWeatherFetch","axios","get","then","res","results","catch","error","handleJumboStyle","jumboSmall","minHeight","location","Jumbotron","path","render","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2053060.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  FormGroup,\n  FormControl,\n  Button\n} from 'react-bootstrap';\n\nimport { withRouter } from \"react-router\";\n\nconst SearchForm = (props) => {\n\n  const [search, setSearch] = useState(\"\")\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let searchUrl = `/search/${search}`;\n    props.history.push(searchUrl);\n\t\tprops.handleSearch(search);\n\t\tsetSearch(\"\");\n  }\n\n  const handleChange = e => {\n\t\tsetSearch(e.target.value);\n\t}\n\n  return (\n    <Form onSubmit={handleSubmit} inline>\n      <FormGroup id=\"searchBarContainer\">\n        <FormControl\n        id=\"searchBar\" \n        type=\"search\" \n        name=\"search\" \n        placeholder=\"What's the weather like in...\" \n        value={search}\n        onChange={handleChange}\n        />\n      </FormGroup>\n      {' '}\n      <Button id=\"searchButton\" type=\"submit\">\n        Search\n      </Button>\n    </Form>\n  )\n};\n\nconst SearchFormWithRouter = withRouter(SearchForm);\nexport default SearchFormWithRouter;","import React from 'react';\n\nconst Forecast = (props) => {\n  let data = props.data\n  // console.log(data);\n\n  let description;\n  let descCapitalized;\n  let currentTemp;\n  let feels;\n  let low;\n  let high;\n  \n  const roundTemp = () => {\n    let rawTemp = data.main.temp;\n    rawTemp = Math.round(rawTemp);\n    currentTemp = Math.trunc(rawTemp)\n  }\n\n  const feelsLike = () => {\n    let rawTemp = data.main.feels_like;\n    rawTemp = Math.round(rawTemp);\n    feels = Math.trunc(rawTemp)\n  }\n\n  const lowTemp = () => {\n    let rawTemp = data.main.temp_min;\n    rawTemp = Math.round(rawTemp);\n    low = Math.trunc(rawTemp)\n  }\n\n  const highTemp = () => {\n    let rawTemp = data.main.temp_max;\n    rawTemp = Math.round(rawTemp);\n    high = Math.trunc(rawTemp)\n  }\n\n  if (data.weather && data.weather[0]) {\n    description = data.weather[0].description;\n    descCapitalized = description.charAt(0).toUpperCase() + description.slice(1);\n    roundTemp();\n    feelsLike();\n    lowTemp();\n    highTemp();\n  }\n\n  return (\n    <div id=\"forecast-container\">\n      <div id=\"conditions\">\n        <h6 id=\"conditions-header\">{`Current Conditions in ${data.name}:`}</h6>\n        <h6 id=\"conditions-desc\">{descCapitalized}</h6>\n      </div>\n      <div id=\"forecast-flex\">\n        <div>{`Temp is: ${currentTemp}°`}</div>\n        <div>{`Feels Like: ${feels}°`}</div>\n        <div>{`Low Today: ${low}°`}</div>\n        <div>{`High Today: ${high}°`}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default Forecast;","import React from 'react';\n\nconst Footer = (props) => {\n\n  return (\n      <div id=\"footer\">\n        <div>Footer</div>\n      </div>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport {\n  Container,\n} from 'react-bootstrap';\nimport Forecast from './Forecast';\n\nimport Footer from './Footer';\n\n\nclass Results extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: true,\n    } \n    this.backgroundRef = React.createRef();\n  }\n\n  waitForIt = () => {\n    setTimeout(() => {\n      this.setBackgroundImg();\n    }, 1000)\n  }\n  \n  setBackgroundImg = () => {\n    this.backgroundRef.current.style.background = this.props.background;\n    this.backgroundRef.current.style.backgroundSize = \"cover\";\n    this.backgroundRef.current.style.height = \"62.5%\";\n  }\n\n render() {\n   this.waitForIt();\n  return (\n    <Container ref={this.backgroundRef}  id=\"resultsContainer\">\n      <Forecast data={this.props.data} />\n      <Footer />\n    </Container>\n    )\n }\n};\n\nexport default Results;\n\n// style={{background:this.state.background}}","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst Nav = (props) => {\n\n  // let textInput = React.createRef();\n\n  const [nav1, setNav1] = useState(Cookies.getJSON('nav1') || \"Virginia\");\n  const [url1, setUrl1] = useState(Cookies.getJSON('nav1') || \"Virginia\");\n\n  const [nav2, setNav2] = useState(Cookies.getJSON('nav2') || \"Maine\");\n  const [url2, setUrl2] = useState(Cookies.getJSON('nav2') || \"Maine\");\n\n  const [nav3, setNav3] = useState(Cookies.getJSON('nav3') || \"Florida\");\n  const [url3, setUrl3] = useState(Cookies.getJSON('nav3') || \"Florida\");\n\n  const[input, setInput] = useState(\"\");\n  const[showing, setShowing] = useState(false)\n\n  //options\n  const[firstOption, setFirstOption] = useState(false);\n  const[secondOption, setSecondOption] = useState(false);\n  const[thirdOption, setThirdOption] = useState(false);\n\n  const setLink = e => {\n    let link = e.target.name;\n    props.fetchNav(link)\n  }\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const changeLink = () => {\n    if (firstOption) {\n      setNav1(input);\n      Cookies.set('nav1', input, {expires: 30});\n      let url = abbreviate(input);\n      setUrl1(url);\n    }\n    if (secondOption) {\n      setNav2(input);\n      Cookies.set('nav2', input, {expires: 30});\n      let url = abbreviate(input);\n      setUrl2(url);\n    }\n    if (thirdOption) {\n      setNav3(input);\n      Cookies.set('nav3', input, {expires: 30});\n      let url = abbreviate(input);\n      setUrl3(url);\n    }\n  }\n\n  const abbreviate = (word) => {\n    if (word.length > 10) {\n      let short = word.substring(0, 10);\n      let format = `${short}..`\n      return format;\n    } else {\n      return word;\n    }\n  }\n\n  //Show input based on option selected\n  const showHideInput = () => {\n    let firstOption = document.getElementById(\"first\").selected;\n    let secondOption = document.getElementById(\"second\").selected;\n    let thirdOption = document.getElementById(\"third\").selected;\n\n    //Check which option is true\n    if (firstOption) {\n      setFirstOption(true);\n    } else {\n      setFirstOption(false);\n    }\n    if (secondOption) {\n      setSecondOption(true);\n    } else {\n      setSecondOption(false);\n    }\n    if (thirdOption) {\n      setThirdOption(true);\n    } else {\n      setThirdOption(false);\n    }\n\n    //Expand Jumbotron if an option is selected\n    if (firstOption || secondOption || thirdOption) {\n      console.log(\"an option is selected\")\n      if (!showing) {\n        setShowing(true);\n        props.jumbo();\n      }\n    } else {\n      setShowing(false);\n      props.jumbo();\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.jumbo();\n    changeLink();\n    setShowing(false);\n    setInput(\"\");\n    document.getElementById(\"homeOption\").selected = true;\n  }\n\n  // Need to open an input that lets users select the location and then use the newLink function to set the Nav and the Url\n \n  return (\n  <div id=\"nav-container\">\n    <div id=\"mainNav\">\n      <ul>\n        <li><NavLink exact to=\"link1\" name={nav1} onClick={setLink}>{url1}</NavLink></li>\n        <li><NavLink to=\"link2\" name={nav2} onClick={setLink}>{url2}</NavLink></li>\n        <li><NavLink to=\"link3\" name={nav3} onClick={setLink}>{url3}</NavLink></li>\n      </ul>\n    </div>\n    <div id=\"form-div\">\n      <form id=\"form-options\"> \n        <select id=\"favorite-options\" onChange={showHideInput}>\n          <option id=\"homeOption\">♥</option>\n          <option id=\"first\">Change First Link</option>\n          <option id=\"second\">Change Second Link</option>\n          <option id=\"third\">Change Third Link</option>\n        </select>\n      </form>\n      <form onSubmit={handleSubmit}  style={{display: showing ? 'block' : \"none\"}}>\n          { (firstOption || secondOption || thirdOption)\n          ? <input id=\"new-link\" type=\"text\" placeholder=\"New Location is...\" ref={textInput => textInput && textInput.focus()} className=\"edit-nav\" value={input} onChange={handleChange}/>\n          : null \n          } \n      </form>\n    </div>\n  </div>\n  )\n}\n\nexport default Nav;","const apiKey = 'd77262e5a1d388bebb698bab17c0b153';\nexport default apiKey;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n//Bootstraps\nimport { Container, Jumbotron } from 'react-bootstrap';\n\n//Components\nimport SearchForm from './components/SearchForm';\nimport Results from './components/Results';\nimport Nav from './components/Nav';\n\n//Fetch\nimport axios from 'axios';\nimport apiKey from './config';\n\n//Images\n\n// import oldTree from './images/oldTree.jpeg';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      location: \"\",\n      results: [],\n      query: \"\",\n      background: \"\",\n      jumboSmall: true,\n      loading: true\n    }\n    this.jumbo = React.createRef();\n  }\n\n  componentDidMount(){\n    this.handleWeatherFetch();\n  }\n\n  \n setBackground = (query = \"clear sky\") => {\n    const imageObject = {\n      clearSky: \"url(https://live.staticflickr.com/4671/40268815811_1244a6b370_z.jpg)\",\n      lightRain: \"url(https://live.staticflickr.com/3906/14674848444_e04aeab462.jpg)\",\n      moderateRain: \"url(https://live.staticflickr.com/4576/24410968298_7e29e77769.jpg)\",\n      heavyRain: \"url(https://live.staticflickr.com/4017/4394669806_ab806947fb_z.jpg)\",\n      lightSnow:\"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\" ,\n      moderateSnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      heavySnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      scatteredCloud:\"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\" ,\n      overcastCloud: \"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\",\n    }\n    this.setState({\n      background: imageObject.clearSky\n    })\n    if (query.includes(\"clear\")) {\n      this.setState({\n        background: imageObject.clearSky\n      })\n      return;\n    }\n    if (query.includes(\"rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (query.includes(\"light rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (query.includes(\"moderate rain\")) {\n      this.setState({\n        background: imageObject.moderateRain\n      })\n      return;\n    }\n    if (query.includes(\"heavy rain\")) {\n      this.setState({\n        background: imageObject.HeavyRain\n      })\n      return;\n    }\n    if (query.includes(\"snow\")) {\n      this.setState({\n        background: imageObject.lightSnow\n      })\n      return;\n    }\n    if (query.includes(\"clouds\")) {\n      this.setState({\n        background: imageObject.scatteredCloud\n      })\n      return;\n    } \n  }\n\n  // Weather API call\n  handleWeatherFetch = (query = \"charlottesville\") => {\n    this.setState({\n      loading: true\n    })\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${query}&units=imperial&APPID=${apiKey}`)\n      .then(res => {\n        let query = res.data.weather[0].description\n        this.setState({\n          results: res.data,\n          query: query,\n          loading: false\n        })\n        this.setBackground(this.state.query);\n        // setTimeout(() => {\n        //   console.log(this.state.query);\n        //   this.handleFlickr(this.state.query);\n        // }, 1000)\n        \n      })\n      .catch(error => {\n        console.log('Error fetching the weather data:', error)\n      })\n  }\n\n  handleJumboStyle = () => {\n    if (this.state.jumboSmall) {\n      this.jumbo.current.style.minHeight = \"47.5%\";\n      this.setState({\n        jumboSmall: false\n      })\n    } else {\n      this.jumbo.current.style.minHeight = \"40%\";\n      this.setState({\n        jumboSmall: true\n      })\n    }\n  }\n\n  render() {\n    return (\n      <HashRouter >\n      <div className=\"App\">\n        <Jumbotron ref={this.jumbo}>\n          <Container>\n            <h5 id=\"appTitle\">Weather The Elements</h5>\n            <SearchForm \n              handleSearch={this.handleWeatherFetch}\n            />\n            <Nav jumbo={this.handleJumboStyle} fetchNav={this.handleWeatherFetch}/>\n            \n          </Container>\n        </Jumbotron>\n        {/* <Results data={this.state.results} background={this.state.background}/> */}\n        <Switch>\n              <Route exact path =\"/\"\n              render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n              />\n              <Route exact path =\"/link1\"\n              render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n              />\n\n              <Route exact path =\"/link2\"\n              render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n              />\n              <Route exact path =\"/link3\"\n              render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n              />\n              <Route exact path =\"/search/:query\"\n              render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n              />\n            </Switch>\n      </div>\n      </HashRouter>\n      \n    );\n  }\n}\n\nexport default App;\n\n\n \n\n//***** Working Flickr Fetch: \n\n/* Does not retrieve optimal images based on weather description. Increases Load times.  May use later for something. Checks for image, reduces image size link; */\n\n\n// reFormat = (format) => {\n//   let editFormat = format.substring(0, format.lastIndexOf(\"_\"));\n//   format = `${editFormat}_z.jpg`;\n//   console.log(format);\n//   this.setState({\n//     background: format,\n//     loading: false\n//   }) \n// }\n// //Fetch background Image\n// handleFlickr = (query) => {\n//   console.log(query);\n//   let num = Math.floor(Math.random() * 20);\n//   this.setState({\n//     loading: true\n//   })\n//   axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKeyFlickr}&tags=${query}&per_page=24&extras=url_o&format=json&nojsoncallback=1`)\n//   .then(res => {\n//     console.log(res.data.photos)\n//     let format = `url(${res.data.photos.photo[num].url_o})`;  \n//     for(let i = 0; i < 20; i++) {\n//       if (format === \"url(undefined)\") {\n//         console.log(\"+1\");\n//         format = `url(${res.data.photos.photo[i].url_o})`\n//         i++\n//       } else {\n//         this.reFormat(format);\n//       } \n//     }\n//   })\n//   .catch(error => {\n//     console.log('Error fetching and parsing data', error)\n//   },)\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}