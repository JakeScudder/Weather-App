{"version":3,"sources":["components/SearchForm.js","googleKey.js","components/Forecast.js","components/Results.js","components/Nav.js","components/Footer.js","components/FiveDay.js","config.js","App.js","serviceWorker.js","index.js"],"names":["SearchFormWithRouter","withRouter","props","useState","search","setSearch","autofill","setArray","showing","setShowing","uuid","unique","setUnique","handleAutofillSubmit","e","query","target","innerText","preventDefault","searchUrl","history","push","handleSearch","setTimeout","Form","onSubmit","inline","FormGroup","id","FormControl","type","name","placeholder","value","onChange","axios","get","then","response","data","predictions","length","style","display","slice","map","suggestion","description","split","pop","console","log","join","key","className","onClick","Button","Forecast","descCapitalized","currentTemp","wind","direction","feels","low","high","sunrise","sunset","weather","charAt","toUpperCase","rawTemp","main","temp","Math","round","trunc","roundTemp","feels_like","feelsLike","temp_min","lowTemp","temp_max","highTemp","rawWind","speed","deg","windy","sys","Date","toLocaleTimeString","Results","waitForIt","setBackgroundImg","backgroundRef","current","background","backgroundSize","minHeight","position","state","loading","React","createRef","this","Container","ref","Component","Nav","Cookies","getJSON","nav1","setNav1","url1","setUrl1","nav2","setNav2","url2","setUrl2","nav3","setNav3","url3","setUrl3","input","setInput","firstOption","setFirstOption","secondOption","setSecondOption","thirdOption","setThirdOption","setLink","link","fetchNav","abbreviate","word","short","substring","exact","to","document","getElementById","selected","event","set","expires","url","changeLink","textInput","focus","FooterWithRouter","textDecoration","fetch5Day","FiveDay","adjustTemp","days","list","count","countTwo","countThree","countFour","i","predictedTemp","d","month","getMonth","day","getDate","city","conditions","apiKey","cityData","require","App","setBackground","imageObject","clearSky","lightRain","moderateRain","heavyRain","lightSnow","moderateSnow","heavySnow","scatteredCloud","overcastCloud","setState","includes","HeavyRain","findCityCode","code","handleWeatherFetch","locationCode","res","results","catch","error","array","replace","cityCapitalized","fetchFiveDay","fiveday","jumboSmall","jumbo","postscribe","Jumbotron","path","render","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eeeaedab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Form,\n  FormGroup,\n  FormControl,\n  Button\n} from 'react-bootstrap';\n\nimport axios from 'axios';\nimport googleKey from '../googleKey';\nimport uuid from 'react-uuid'\n\n\nimport { withRouter } from \"react-router\";\n\nconst SearchForm = (props) => {\n\n  const [search, setSearch] = useState(\"\");\n  const [autofill, setArray] = useState(\"\");\n  const [showing, setShowing] = useState(\"\");\n  const [unique, setUnique] = useState(uuid());\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let searchUrl = `/search/${search}`;\n    props.history.push(searchUrl);\n\t\tprops.handleSearch(search);\n    setSearch(\"\");\n    setUnique(uuid());\n  }\n\n  const handleAutofillSubmit = e => {\n    let query = e.target.innerText;\n    e.preventDefault();\n    let searchUrl = `/search/${query}`\n    props.history.push(searchUrl);\n\t\tprops.handleSearch(query);\n    setSearch(\"\");\n    setTimeout(function(){setShowing(false)}, 400);\n    setUnique(uuid());\n  }\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n\n    axios.get(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/autocomplete/json?input=${e.target.value}&key=${googleKey}&sessiontoken=${unique}`)\n      .then(response => {\n        if (response.data.predictions.length > 0) {\n          setShowing(true);\n        } else {\n          setShowing(false);\n        }\n        setArray(response.data.predictions);\n      })\n\t}\n\n  return (\n    <Form onSubmit={handleSubmit} inline>\n      <FormGroup id=\"searchBarContainer\">\n        <FormControl\n        id=\"searchBar\" \n        type=\"text\" \n        name=\"search\" \n        placeholder=\"City, State (i.e. Denver, CO)\" \n        value={search}\n        onChange={handleChange}\n        />\n        <ul id=\"autofill\" style={{display: showing ? 'block' : \"none\"}}>\n          { showing && autofill.length > 1? \n            autofill.slice(0, 4).map(suggestion => {\n              let description = suggestion.description.split(\",\")\n              description.pop();\n              console.log(description);\n              description = description.join(\", \")\n              console.log(description);\n            return <li key={suggestion.id} className=\"autofill-li\" onClick={handleAutofillSubmit}>{description}</li>\n            })\n            : null\n          }\n        </ul>\n      </FormGroup>\n      <Button id=\"searchButton\" type=\"submit\">\n        Search\n      </Button>\n    </Form>\n  )\n};\n\nconst SearchFormWithRouter = withRouter(SearchForm);\nexport default SearchFormWithRouter;","const googleKey ='AIzaSyDp8C86GMfg8kqH2t-fKT3IjVnGiomUPos';\nexport default googleKey;","import React from 'react';\n\n// import axios from 'axios';\n// import accuKey from '../accuweather.js';\n\nconst Forecast = (props) => {\n\n  let data = props.data\n\n  let description;\n  let descCapitalized;\n  let currentTemp;\n  let wind;\n  let direction;\n  let feels;\n  let low;\n  let high;\n  let sunrise;\n  let sunset;\n  \n  const roundTemp = () => {\n    let rawTemp = data.main.temp;\n    rawTemp = Math.round(rawTemp);\n    currentTemp = Math.trunc(rawTemp)\n  }\n\n  const windy = () => {\n    let rawWind = data.wind.speed;\n    rawWind = Math.round(rawWind);\n    wind = Math.trunc(rawWind)\n\n    direction = data.wind.deg;\n    if (direction >= 334 || direction <= 25) {\n      direction = \"N\";\n    }\n    if (direction >= 26 || direction <= 65) {\n      direction = \"NE\";\n    }\n    if (direction >= 66 || direction <= 115) {\n      direction = \"E\";\n    }\n    if (direction >= 116 || direction <=  155) {\n      direction = \"SE\";\n    }\n    if (direction >= 156 || direction <=  205) {\n      direction = \"S\";\n    }\n    if (direction >= 206 || direction <=  245) {\n      direction = \"SW\";\n    }\n    if (direction >= 246 || direction <=  295) {\n      direction = \"W\";\n    }\n    if (direction >= 296 || direction <=  335) {\n      direction = \"NW\";\n    }\n  }\n\n  const feelsLike = () => {\n    let rawTemp = data.main.feels_like;\n    rawTemp = Math.round(rawTemp);\n    feels = Math.trunc(rawTemp)\n  }\n\n  const lowTemp = () => {\n    let rawTemp = data.main.temp_min;\n    rawTemp = Math.round(rawTemp);\n    low = Math.trunc(rawTemp)\n  }\n\n  const highTemp = () => {\n    let rawTemp = data.main.temp_max;\n    rawTemp = Math.round(rawTemp);\n    high = Math.trunc(rawTemp)\n  }\n\n  const getSun = () => {\n    sunrise = data.sys.sunrise\n    sunrise = new Date(sunrise * 1000).toLocaleTimeString();\n    sunset = data.sys.sunset\n    sunset = new Date(sunset * 1000).toLocaleTimeString();\n  }\n\n  // //Fetch actual Tide Data with Location Key\n  // const fetchTides = (locationKey) => {\n  //   axios.get(`https://cors-anywhere.herokuapp.com/http://apidev.accuweather.com/tidal/v1/forecasts/1day/${locationKey}?apikey=${accuKey}`)\n  //   .then(response => {\n  //     console.log(response)\n  //   })\n  //   .catch(error => {\n  //     console.log('Error fetching the weather data:', error)\n  //   })\n    \n  // }\n\n  // //Tide Api Fetch Location Key\n  // const handleTideLocation = (location) => {\n  //   axios.get(`https://cors-anywhere.herokuapp.com/http://dataservice.accuweather.com/locations/v1/cities/search.json?apikey=${accuKey}&q=${location}&details=true HTTP/1.1`)\n  //     .then(response => {\n  //       console.log(response.data[0].Key);\n  //       let key = response.data[0].Key;\n  //       fetchTides(key)\n  //     })\n  //     .catch(error => {\n  //       console.log('Error fetching the weather data:', error)\n  //     })\n  // }\n\n\n\n  if (data.weather && data.weather[0]) {\n    description = data.weather[0].description;\n    descCapitalized = description.charAt(0).toUpperCase() + description.slice(1);\n    roundTemp();\n    feelsLike();\n    lowTemp();\n    highTemp();\n    windy();\n    getSun();\n    // handleTideLocation(data.name)\n  }\n\n  \n\n  return (\n    <div id=\"forecast-container\">\n      <div id=\"conditions\">\n        <h6 id=\"conditions-header\">{`Current Conditions in ${data.name}:`}</h6>\n        <h6 id=\"conditions-desc\">{descCapitalized}</h6>\n      </div>\n      <div id=\"forecast-div\">\n        <div id=\"forecast-flex\">\n          <div>{`Currently: ${currentTemp}°`}</div>\n          <div>{`Feels Like: ${feels}°`}</div>\n          <div>{`Wind: ${direction} ${wind}mph`}</div>\n          <div>{`Low Today: ${low}°`}</div>\n          <div>{`High Today: ${high}°`}</div>\n          <div className=\"tide\">\n            <p >{`Sunrise: ${sunrise}`}</p>\n            <p>{`Sunset: ${sunset}`}</p> \n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Forecast;","import React, { Component } from 'react';\nimport {\n  Container,\n} from 'react-bootstrap';\nimport Forecast from './Forecast';\n\n\n\nclass Results extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: true,\n    } \n    this.backgroundRef = React.createRef();\n  }\n\n  waitForIt = () => {\n    setTimeout(() => {\n      this.setBackgroundImg();\n    }, 1000)\n  }\n  \n  setBackgroundImg = () => {\n    this.backgroundRef.current.style.background = this.props.background;\n    this.backgroundRef.current.style.backgroundSize = \"cover\";\n    this.backgroundRef.current.style.minHeight = \"50%\";\n    this.backgroundRef.current.style.position = \"relative\";\n\n  }\n\n render() {\n   this.waitForIt();\n  return (\n      <Container ref={this.backgroundRef} className=\"animated fadeIn\" id=\"resultsContainer\">\n        <Forecast data={this.props.data} />\n      </Container>\n    )\n }\n};\n\nexport default Results;\n\n// style={{background:this.state.background}}","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst Nav = (props) => {\n\n  // let textInput = React.createRef();\n\n  const [nav1, setNav1] = useState(Cookies.getJSON('nav1') || \"Virginia\");\n  const [url1, setUrl1] = useState(Cookies.getJSON('url1') || \"Virginia\");\n\n  const [nav2, setNav2] = useState(Cookies.getJSON('nav2') || \"Maine\");\n  const [url2, setUrl2] = useState(Cookies.getJSON('url2') || \"Maine\");\n\n  const [nav3, setNav3] = useState(Cookies.getJSON('nav3') || \"Florida\");\n  const [url3, setUrl3] = useState(Cookies.getJSON('url3') || \"Florida\");\n\n  const[input, setInput] = useState(\"\");\n  const[showing, setShowing] = useState(false)\n\n  //options\n  const[firstOption, setFirstOption] = useState(false);\n  const[secondOption, setSecondOption] = useState(false);\n  const[thirdOption, setThirdOption] = useState(false);\n\n  const setLink = e => {\n    let link = e.target.name;\n    props.fetchNav(link)\n  }\n\n  const handleChange = (event) => {\n    setInput(event.target.value);\n  }\n\n  const changeLink = () => {\n    if (firstOption) {\n      setNav1(input);\n      Cookies.set('nav1', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url1', url, {expires: 30});\n      setUrl1(url);\n    }\n    if (secondOption) {\n      setNav2(input);\n      Cookies.set('nav2', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url2', url, {expires: 30});\n      setUrl2(url);\n    }\n    if (thirdOption) {\n      setNav3(input);\n      Cookies.set('nav3', input, {expires: 30});\n      let url = abbreviate(input);\n      Cookies.set('url3', url, {expires: 30});\n      setUrl3(url);\n    }\n  }\n\n  const abbreviate = (word) => {\n    if (word.length > 10) {\n      let short = word.substring(0, 8);\n      let format = `${short}..`\n      return format;\n    } else {\n      return word;\n    }\n  }\n\n  //Show input based on option selected\n  const showHideInput = () => {\n    let firstOption = document.getElementById(\"first\").selected;\n    let secondOption = document.getElementById(\"second\").selected;\n    let thirdOption = document.getElementById(\"third\").selected;\n\n    //Check which option is true\n    if (firstOption) {\n      setFirstOption(true);\n    } else {\n      setFirstOption(false);\n    }\n    if (secondOption) {\n      setSecondOption(true);\n    } else {\n      setSecondOption(false);\n    }\n    if (thirdOption) {\n      setThirdOption(true);\n    } else {\n      setThirdOption(false);\n    }\n\n    //Expand Jumbotron if an option is selected\n    if (firstOption || secondOption || thirdOption) {\n      console.log(\"an option is selected\")\n      if (!showing) {\n        setShowing(true);\n      }\n    } else {\n      setShowing(false);\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    changeLink();\n    setShowing(false);\n    setInput(\"\");\n    document.getElementById(\"homeOption\").selected = true;\n  }\n\n  // Need to open an input that lets users select the location and then use the newLink function to set the Nav and the Url\n \n  return (\n  <div id=\"nav-container\">\n    <div id=\"mainNav\">\n      <ul>\n        <li><NavLink exact to=\"link1\" name={nav1} onClick={setLink}>{url1}</NavLink></li>\n        <li><NavLink to=\"link2\" name={nav2} onClick={setLink}>{url2}</NavLink></li>\n        <li><NavLink to=\"link3\" name={nav3} onClick={setLink}>{url3}</NavLink></li>\n      </ul>\n    </div>\n    <div id=\"form-div\">\n      <form id=\"form-options\"> \n        <select id=\"favorite-options\" onChange={showHideInput}>\n          <option id=\"homeOption\">♥Change Links</option>\n          <option id=\"first\">Change 1st</option>\n          <option id=\"second\">Change 2nd</option>\n          <option id=\"third\">Change 3rd</option>\n        </select>\n      </form>\n      <form onSubmit={handleSubmit}  style={{display: showing ? 'block' : \"none\"}}>\n          { (firstOption || secondOption || thirdOption)\n          ? <input id=\"new-link\" type=\"text\" placeholder=\"i.e Denver, CO\" ref={textInput => textInput && textInput.focus()} className=\"edit-nav\" value={input} onChange={handleChange}/>\n          : null \n          } \n      </form>\n    </div>\n  </div>\n  )\n}\n\nexport default Nav;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\n\nconst Footer = (props) => {\n\n  const handle5Day = (event) => {\n    props.fetch5Day();\n  }\n\n  const handleClick = () => {\n    console.log(\"going home\");\n  }\n\n\n  return (\n      <div id=\"footer\">\n        <NavLink to=\"/\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handleClick}>\n        <i className=\"material-icons footer-icon\" >dashboard</i>\n        <span className=\"footer-text\">Home</span>\n        </NavLink>\n        <NavLink to=\"/five-day\" name=\"five-day\" className=\"footer-link\" style={{ textDecoration: 'none' }} onClick={handle5Day} >\n        <i className=\"material-icons footer-icon\" >calendar_today</i>\n        <span className=\"footer-text\">5-Day</span>\n        </NavLink>\n      </div>\n  )\n}\n\nconst FooterWithRouter = withRouter(Footer);\nexport default FooterWithRouter;","import React, { Component } from 'react';\nimport {\n  Container,\n} from 'react-bootstrap';\n\n// import { Animated } from 'react-animated-css';\n\n\nclass FiveDay extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: true,\n    } \n    this.backgroundRef = React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    setTimeout(() => {\n      this.props.fetch5Day();\n    }, 800)\n  }\n  \n  waitForIt = () => {\n    setTimeout(() => {\n      this.setBackgroundImg();\n    }, 900)\n  }\n  \n  setBackgroundImg = () => {\n    this.backgroundRef.current.style.background = this.props.background;\n    this.backgroundRef.current.style.backgroundSize = \"cover\";\n    this.backgroundRef.current.style.minHeight = \"50%\";\n    this.backgroundRef.current.style.position = \"relative\";\n\n  }\n\n  adjustTemp = (temp) => {\n    let rawTemp = Math.round(temp);\n    let temperature = Math.trunc(rawTemp)\n    return temperature\n  }\n\n  render() {\n    this.waitForIt();\n    let data = this.props.data;\n    let days = [];\n\n    if (data && data.list) {\n      data = this.props.data.list\n      console.log(data);\n      let count = 1;\n      let countTwo = 10;\n      let countThree = 20;\n      let countFour = 30;\n      for (let i = 5; i < data.length; i+= 8) {\n        let predictedTemp = data[i].main.temp;\n        // let high = data[i].main.temp_max;\n        // let low = data[i].main.temp_min;\n        predictedTemp = this.adjustTemp(predictedTemp)\n        // high = this.adjustTemp(high)\n        // low = this.adjustTemp(low)\n        let weather = data[i].weather[0].description;\n        weather = weather.charAt(0).toUpperCase() + weather.slice(1);\n        let wind = data[i].wind.speed;\n        wind = this.adjustTemp(wind);\n        let d = new Date();\n        let months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n        let month = months[d.getMonth()];\n        let day = d.getDate();\n        day = day += count;\n        count += 1;\n        countTwo += 1;\n        countThree += 1;\n        countFour += 1;\n        days.push(<p key ={count} className=\"five-day-forecast\"> {month} {day}: </p>)\n        days.push(<p key ={countTwo} className=\"five-day-desc\">Temp: {predictedTemp}° </p>) \n        days.push(<p key ={countThree} className=\"five-day-desc\">Conditions: {weather}</p>) \n        days.push(<p key ={countFour} className=\"five-day-desc\">Wind: {wind}mph</p>) \n      }\n    }\n    return (\n      // <Animated animationIn=\"fadeIn\" animationInDelay=\"500\">\n        <Container ref={this.backgroundRef} className=\"animated fadeIn\"  id=\"fiveDayContainer\">\n        <div id=\"five-day-conditions\">\n          <h6 className=\"five-day-header\">{`Current Conditions in ${this.props.city}:`}</h6>\n          <h6 className=\"five-day-header\">{this.props.conditions}</h6>\n        </div>\n          <div id=\"five-day\"> \n            {days}\n          </div>\n        </Container>\n      //* </Animated> */\n    );\n  }\n} \n\nexport default FiveDay;","const apiKey = 'd77262e5a1d388bebb698bab17c0b153';\nexport default apiKey;","import React, { Component } from 'react';\nimport postscribe from 'postscribe';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n//Bootstraps\nimport { Container, Jumbotron } from 'react-bootstrap';\n\n//Components\nimport SearchForm from './components/SearchForm';\nimport Results from './components/Results';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\nimport FiveDay from './components/FiveDay';\n\n//Fetch\nimport axios from 'axios';\nimport apiKey from './config';\nimport googleKey from './googleKey';\nconst cityData = require('./city.list.json');\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      locationCode: \"\",\n      city: \"Charlottesville\",\n      state: \"\",\n      results: [],\n      fiveday: [],\n      conditions: \"\",\n      background: \"\",\n      jumboSmall: true,\n      loading: true\n    }\n    this.jumbo = React.createRef();\n  }\n\n  componentDidMount(){\n    this.handleWeatherFetch();\n    postscribe('#root', `<script type=\"text/javascript\" src=\"https://maps.googleapis.com/maps/api/js?key=${googleKey}&libraries=places\"></script>`);\n  }\n\n  \n setBackground = (conditions = \"clear sky\") => {\n    const imageObject = {\n      clearSky: \"url(https://live.staticflickr.com/4671/40268815811_1244a6b370_z.jpg)\",\n      lightRain: \"url(https://live.staticflickr.com/3906/14674848444_e04aeab462.jpg)\",\n      moderateRain: \"url(https://live.staticflickr.com/4576/24410968298_7e29e77769.jpg)\",\n      heavyRain: \"url(https://live.staticflickr.com/4017/4394669806_ab806947fb_z.jpg)\",\n      lightSnow:\"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\" ,\n      moderateSnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      heavySnow: \"url(https://live.staticflickr.com/4746/25604711047_5f06f28d8b.jpg)\",\n      scatteredCloud:\"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\" ,\n      overcastCloud: \"url(https://live.staticflickr.com/3229/2887338950_0a190905a1.jpg)\",\n    }\n    this.setState({\n      background: imageObject.clearSky\n    })\n    if (conditions.includes(\"clear\")) {\n      this.setState({\n        background: imageObject.clearSky\n      })\n      return;\n    }\n    if (conditions.includes(\"rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (conditions.includes(\"light rain\")) {\n      this.setState({\n        background: imageObject.lightRain\n      })\n      return;\n    }\n    if (conditions.includes(\"moderate rain\")) {\n      this.setState({\n        background: imageObject.moderateRain\n      })\n      return;\n    }\n    if (conditions.includes(\"heavy rain\")) {\n      this.setState({\n        background: imageObject.HeavyRain\n      })\n      return;\n    }\n    if (conditions.includes(\"snow\")) {\n      this.setState({\n        background: imageObject.lightSnow\n      })\n      return;\n    }\n    if (conditions.includes(\"clouds\")) {\n      this.setState({\n        background: imageObject.scatteredCloud\n      })\n      return;\n    } \n  }\n\n  //Runs fetch api with the city code to get precise weather\n  findCityCode = (city = 'Charlottesville', state = \"VA\") => {\n    console.log(city, state);\n    this.setState({\n      city: city,\n      state: state,\n    })\n    for (let i = 0; i < cityData.length; i++) {\n      if (city === cityData[i].name && state === cityData[i].state) {\n        let code = cityData[i].id\n        console.log(cityData[i].id);\n        this.handleWeatherFetch(code)\n      }\n    }\n  }\n\n  // Weather API call\n  handleWeatherFetch = (code = 4752031) => {\n    this.setState({\n      loading: true,\n      locationCode: code,\n    })\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?id=${code}&units=imperial&APPID=${apiKey}`)\n      .then(res => {\n        let conditions = res.data.weather[0].description\n        this.setState({\n          results: res.data,\n          conditions: conditions,\n          loading: false\n        })\n        this.setBackground(this.state.conditions);     \n      })\n      .catch(error => {\n        console.log('Error fetching the weather data:', error)\n      })\n  }\n\n  //Taking the search parameters, separating them into City and State in order to then find the city code\n  handleSearch = (query) => {\n    let array = query.split(',');\n    let city = array[0];\n    let state = array[1];\n    state = state.replace(/\\s+/g, '');\n    let cityCapitalized = city.charAt(0).toUpperCase() + city.slice(1);\n    state = state.toUpperCase();\n    this.findCityCode(cityCapitalized, state);\n  }\n\n  fetchFiveDay = () => {\n    let code = this.state.locationCode;\n    this.setState({\n      loading: true\n    })\n    axios.get(`https://api.openweathermap.org/data/2.5/forecast?id=${code}&units=imperial&APPID=${apiKey}`)\n      .then(response => {\n        console.log(response)   \n        this.setState({\n          fiveday: response.data,\n          loading: false,\n        }) \n        this.setBackground(this.state.conditions);  \n      })\n      .catch(error => {\n        console.log('Error fetching the weather data:', error)\n      })\n  }\n\n  render() {\n    return (\n      <HashRouter >\n      <div className=\"App\">\n        <Jumbotron>\n          <Container>\n            <h4 id=\"appTitle\">BlueJay Weather</h4>\n            <SearchForm \n              handleSearch={this.handleSearch}\n            />\n            <Nav fetchNav={this.handleSearch}/>\n          </Container>\n        </Jumbotron>\n        <Switch>\n          <Route exact path =\"/\"\n          render={(props) => <Results {...props} city={this.state.city} state={this.state.state} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/link1\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n\n          <Route exact path =\"/link2\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/link3\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/search/:query\"\n          render={(props) => <Results {...props} data={this.state.results} background={this.state.background} /> }\n          />\n          <Route exact path =\"/five-day\"\n          render={(props) => <FiveDay fetch5Day={this.fetchFiveDay} city={this.state.city} conditions={this.state.conditions} {...props} data={this.state.fiveday} background={this.state.background} /> }\n          />\n        </Switch>\n        <Footer fetch5Day={this.fetchFiveDay} />\n      </div>\n      </HashRouter>\n      \n    );\n  }\n}\n\nexport default App;\n\n\n \n\n//***** Working Flickr Fetch: \n\n/* Does not retrieve optimal images based on weather description. Increases Load times.  May use later for something. Checks for image, reduces image size link; */\n\n\n// reFormat = (format) => {\n//   let editFormat = format.substring(0, format.lastIndexOf(\"_\"));\n//   format = `${editFormat}_z.jpg`;\n//   console.log(format);\n//   this.setState({\n//     background: format,\n//     loading: false\n//   }) \n// }\n// //Fetch background Image\n// handleFlickr = (query) => {\n//   console.log(query);\n//   let num = Math.floor(Math.random() * 20);\n//   this.setState({\n//     loading: true\n//   })\n//   axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKeyFlickr}&tags=${query}&per_page=24&extras=url_o&format=json&nojsoncallback=1`)\n//   .then(res => {\n//     console.log(res.data.photos)\n//     let format = `url(${res.data.photos.photo[num].url_o})`;  \n//     for(let i = 0; i < 20; i++) {\n//       if (format === \"url(undefined)\") {\n//         console.log(\"+1\");\n//         format = `url(${res.data.photos.photo[i].url_o})`\n//         i++\n//       } else {\n//         this.reFormat(format);\n//       } \n//     }\n//   })\n//   .catch(error => {\n//     console.log('Error fetching and parsing data', error)\n//   },)\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './animate.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}